 
              







          YÜKSEK DÜZEY PROGRAMLAMA DERSÝ PROJE RAPORU




            Digit Recognizer Veri Seti ile Model Geliþtirme






                                     Ýpek Melisa Yýlmaz
                                  202113172023
 





                            EÐÝTMEN: Doç.Dr. Hasan Temurtaþ






1. Proje Amacý ve Genel Bakýþ

Bu projede, MNIST veri kümesi kullanýlarak bir derin öðrenme modeli oluþturulmuþtur. Modelin amacý, el yazýsý rakamlarý (0-9) doðru bir þekilde sýnýflandýrmaktýr. Proje, görüntü verilerini iþleyerek sýnýflandýrma yapmak için bir yapay sinir aðý (ANN) kullanmaktadýr.

2. Veri Kümesi

Veri kümesi, MNIST veri setinden alýnmýþtýr. Bu veri seti, el yazýsý ile yazýlmýþ 28x28 piksel boyutlarýnda 60.000 eðitim ve 10.000 test görüntüsünden oluþmaktadýr. Her görüntü bir rakamý (0'dan 9'a kadar) temsil etmektedir.

X_train: Eðitim verisi (60.000 görüntü).
y_train: Eðitim etiketleri (60.000 etiket).
X_test: Test verisi (10.000 görüntü).
y_test: Test etiketleri (10.000 etiket).

3. Verilerin Yüklenmesi ve Ön Ýþleme
Verilerin Yüklenmesi
Proje ilk adýmda, MNIST veri kümesi pandas ile CSV dosyalarýndan yüklenmiþtir:

 
Eðitim ve test veri kümeleri pandas DataFrame'lerine yüklenmiþtir. Burada train.csv eðitim verisini ve test.csv test verisini içermektedir.

Verilerin Düzenlenmesi ve Normalizasyon

Eðitim verisi ve test verisi, modelin gereksinimlerine göre iþlenmiþtir:

X_train = mnist_dataset_train.drop(columns=["label"]).values
y_train = mnist_dataset_train["label"].values
X_test = mnist_dataset_test.values

Eðitim verisinden etiketler (label) ayrýlmýþ ve görüntüler 28x28 boyutlarýndan bir vektöre dönüþtürülmüþtür. Ayrýca, görüntüler 0-255 aralýðýnda deðerler aldýðýndan, bu deðerler 0 ile 1 arasýna normalize edilmiþtir.


 

4. Modelin Oluþturulmasý

Model, bir yapay sinir aðý (ANN) kullanarak oluþturulmuþtur. Modelin yapýsý aþaðýdaki gibi belirlenmiþtir:

Giriþ Katmaný: 784 nöron (28x28 piksel görüntülerin düzleþtirilmiþ hali).
Gizli Katman: 128 nöron ve ReLU aktivasyon fonksiyonu.
Çýktý Katmaný: 10 nöron (0'dan 9'a kadar olan rakamlar) ve Softmax aktivasyon fonksiyonu.

 

Model Özeti

Modelin özetine bakýldýðýnda, ilk katmanýn 128 nörona sahip olduðu ve çýkýþ katmanýnýn 10 nörona sahip olduðu görülür. Çýkýþ katmaný, Softmax fonksiyonu ile her bir sýnýf için olasýlýklarý hesaplar.

5. Modelin Derlenmesi

Model derlenmeden önce, modelin eðitilebilmesi için compile fonksiyonu çaðrýlmalýdýr. Bu fonksiyon, kayýp fonksiyonu, optimizasyon algoritmasý ve deðerlendirme metriðini belirtir.
 

Optimizer: Adam (önerilen bir optimizasyon algoritmasý).
Loss Function: Kategorik çapraz entropi kaybý (çok sýnýflý sýnýflandýrma problemi için).

Metric: Modelin baþarýsýný deðerlendirmek için doðruluk (accuracy).

6. Modelin Eðitilmesi

Modelin eðitilmesi için fit fonksiyonu kullanýlmýþtýr. Bu fonksiyon, modelin eðitim verisi üzerinde eðitilmesini saðlar. Eðitimde, her bir batch için 64 örnek kullanýlacak ve toplamda 10 epoch boyunca eðitim yapýlacaktýr.

 

batch_size: 64 (her adýmda 64 örnek iþlenecektir).

epochs: 10 (model 10 kez tüm eðitim verisi üzerinde çalýþtýrýlacaktýr).

validation_split: Eðitim verilerinin %20'si doðrulama için ayrýlacaktýr.

7. Modelin Performansýnýn Deðerlendirilmesi

Modelin doðruluðu, test verisi üzerinde deðerlendirilmiþtir:

test_loss, test_acc = model.evaluate(X_test, y_test, verbose

print(f"Test Accuracy: {test_acc}")

Bu iþlem, modelin test verisi üzerindeki doðruluðunu hesaplar. Sonuç olarak, modelin genel baþarýsý hakkýnda bilgi edinilir.

8. Tahminlerin Yapýlmasý

Eðitim tamamlandýktan sonra, test veri kümesi üzerinde tahminler yapýlmýþtýr:

 

Burada, modelin tahmin ettiði olasýlýklarý içeren bir DataFrame oluþturulmuþ ve her örnek için en yüksek olasýlýða sahip sýnýf etiketi seçilmiþtir.

9. Sonuçlar ve Çýktýlar

Model, test veri kümesi üzerinde yapýlan tahminlerde yüksek doðruluk oranlarýna ulaþmýþtýr. df DataFrame’i, her bir görüntü için tahmin edilen etiketleri içerir. Bu sonuçlar Kaggle gibi platformlarda test verisi üzerinde deðerlendirilebilir.

Test Sonuçlarý:
Modelin doðruluðu test seti üzerinde belirli bir seviyede çýkmýþtýr ve her bir test görüntüsü için tahmin edilen etiketler þu þekilde sýralanabilir.

Görüntü Örneði:


 



Bu örnekte model, görüntüyü doðru bir þekilde 8 olarak sýnýflandýrmýþtýr.

10. Sonuç

Bu proje, derin öðrenme tekniklerini kullanarak, MNIST veri setindeki el yazýsý rakamlarýný baþarýlý bir þekilde sýnýflandýrmayý baþarmýþtýr. Model, test veri kümesi üzerinde yüksek doðruluk oranlarý elde etmiþtir. Gelecekte, modelin doðruluðunu artýrmak için farklý yapýlandýrmalar veya hiperparametre ayarlamalarý yapýlabilir.


